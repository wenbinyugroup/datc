# -*- coding: utf-8 -*-

from abaqus import *
from abaqusConstants import *
from caeModules import *
from utilities import *
import utilities_abq as uab
from textRepr import *
import regionToolset
from utilities import *
from utilities import * 
import os
import time
from section import *
from material import *


def writePronyMaterials(methodIn,
               analysisMat, model_name, Material_matname, Anisotropy, Poisson='',
               IsoE_infinity='',  Iso_CTE='', Iso_viscoelastic='',
               Iso_thermoviscoelastic='', EngE_infinity='', Eng_CTE='', Eng_viscoelastic='',
               Eng_thermoviscoelastic='', OrtE_infinity='',
               Ort_CTE='', Ort_viscoelastic='', Ort_thermoviscoelastic='',  AniE_infinity='',
               Ani_CTE='', Ani_viscoelastic='', Ani_thermoviscoelastic='',               
               rf_model_name='', file_material_input=''):
    if methodIn in [1]:
         ep1=' P'
         mdb.models[model_name].Material(name=Material_matname, materialIdentifier=ep1)
         if Anisotropy == 1:
		      i=len(Iso_viscoelastic)
		      if i==1:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0])), temperatureDependency=ON)				
		      elif i==2:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0])), temperatureDependency=ON)
		      elif i==3:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0]),(Iso_viscoelastic [2][1],float(Poisson),Iso_viscoelastic [2][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0]),(Iso_thermoviscoelastic[2][1], Iso_viscoelastic [2][0])), temperatureDependency=ON)				
		      elif i==4:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0]),(Iso_viscoelastic [2][1],float(Poisson),Iso_viscoelastic [2][0]),(Iso_viscoelastic [3][1],float(Poisson),Iso_viscoelastic [3][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0]),(Iso_thermoviscoelastic[2][1], Iso_viscoelastic [2][0]),(Iso_thermoviscoelastic[3][1], Iso_viscoelastic [3][0])), temperatureDependency=ON)					
		      elif i==5:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0]),(Iso_viscoelastic [2][1],float(Poisson),Iso_viscoelastic [2][0]),(Iso_viscoelastic [3][1],float(Poisson),Iso_viscoelastic [3][0]),(Iso_viscoelastic [4][1],float(Poisson),Iso_viscoelastic [4][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0]),(Iso_thermoviscoelastic[2][1], Iso_viscoelastic [2][0]),(Iso_thermoviscoelastic[3][1], Iso_viscoelastic [3][0]),(Iso_thermoviscoelastic[4][1], Iso_viscoelastic [4][0])), temperatureDependency=ON)	
		      elif i==6:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0]),(Iso_viscoelastic [2][1],float(Poisson),Iso_viscoelastic [2][0]),(Iso_viscoelastic [3][1],float(Poisson),Iso_viscoelastic [3][0]),(Iso_viscoelastic [4][1],float(Poisson),Iso_viscoelastic [4][0]),(Iso_viscoelastic [5][1],float(Poisson),Iso_viscoelastic [5][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0]),(Iso_thermoviscoelastic[2][1], Iso_viscoelastic [2][0]),(Iso_thermoviscoelastic[3][1], Iso_viscoelastic [3][0]),(Iso_thermoviscoelastic[4][1], Iso_viscoelastic [4][0]),(Iso_thermoviscoelastic[5][1], Iso_viscoelastic [5][0])), temperatureDependency=ON)					
		      elif i==7:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0]),(Iso_viscoelastic [2][1],float(Poisson),Iso_viscoelastic [2][0]),(Iso_viscoelastic [3][1],float(Poisson),Iso_viscoelastic [3][0]),(Iso_viscoelastic [4][1],float(Poisson),Iso_viscoelastic [4][0]),(Iso_viscoelastic [5][1],float(Poisson),Iso_viscoelastic [5][0]),(Iso_viscoelastic [6][1],float(Poisson),Iso_viscoelastic [6][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0]),(Iso_thermoviscoelastic[2][1], Iso_viscoelastic [2][0]),(Iso_thermoviscoelastic[3][1], Iso_viscoelastic [3][0]),(Iso_thermoviscoelastic[4][1], Iso_viscoelastic [4][0]),(Iso_thermoviscoelastic[5][1], Iso_viscoelastic [5][0]),(Iso_thermoviscoelastic[6][1], Iso_viscoelastic [6][0])), temperatureDependency=ON)					
		      elif i==8:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0]),(Iso_viscoelastic [2][1],float(Poisson),Iso_viscoelastic [2][0]),(Iso_viscoelastic [3][1],float(Poisson),Iso_viscoelastic [3][0]),(Iso_viscoelastic [4][1],float(Poisson),Iso_viscoelastic [4][0]),(Iso_viscoelastic [5][1],float(Poisson),Iso_viscoelastic [5][0]),(Iso_viscoelastic [6][1],float(Poisson),Iso_viscoelastic [6][0]),(Iso_viscoelastic [7][1],float(Poisson),Iso_viscoelastic [7][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0]),(Iso_thermoviscoelastic[2][1], Iso_viscoelastic [2][0]),(Iso_thermoviscoelastic[3][1], Iso_viscoelastic [3][0]),(Iso_thermoviscoelastic[4][1], Iso_viscoelastic [4][0]),(Iso_thermoviscoelastic[5][1], Iso_viscoelastic [5][0]),(Iso_thermoviscoelastic[6][1], Iso_viscoelastic [6][0]),(Iso_thermoviscoelastic[7][1], Iso_viscoelastic [7][0])), temperatureDependency=ON)				
		      elif i==9:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0]),(Iso_viscoelastic [2][1],float(Poisson),Iso_viscoelastic [2][0]),(Iso_viscoelastic [3][1],float(Poisson),Iso_viscoelastic [3][0]),(Iso_viscoelastic [4][1],float(Poisson),Iso_viscoelastic [4][0]),(Iso_viscoelastic [5][1],float(Poisson),Iso_viscoelastic [5][0]),(Iso_viscoelastic [6][1],float(Poisson),Iso_viscoelastic [6][0]),(Iso_viscoelastic [7][1],float(Poisson),Iso_viscoelastic [7][0]),(Iso_viscoelastic [8][1],float(Poisson),Iso_viscoelastic [8][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0]),(Iso_thermoviscoelastic[2][1], Iso_viscoelastic [2][0]),(Iso_thermoviscoelastic[3][1], Iso_viscoelastic [3][0]),(Iso_thermoviscoelastic[4][1], Iso_viscoelastic [4][0]),(Iso_thermoviscoelastic[5][1], Iso_viscoelastic [5][0]),(Iso_thermoviscoelastic[6][1], Iso_viscoelastic [6][0]),(Iso_thermoviscoelastic[7][1], Iso_viscoelastic [7][0]),(Iso_thermoviscoelastic[8][1], Iso_viscoelastic [8][0])), temperatureDependency=ON)	
		      elif i==10:
				mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=((float(IsoE_infinity),float(Poisson),0),(Iso_viscoelastic [0][1],float(Poisson),Iso_viscoelastic [0][0]),(Iso_viscoelastic [1][1],float(Poisson),Iso_viscoelastic [1][0]),(Iso_viscoelastic [2][1],float(Poisson),Iso_viscoelastic [2][0]),(Iso_viscoelastic [3][1],float(Poisson),Iso_viscoelastic [3][0]),(Iso_viscoelastic [4][1],float(Poisson),Iso_viscoelastic [4][0]),(Iso_viscoelastic [5][1],float(Poisson),Iso_viscoelastic [5][0]),(Iso_viscoelastic [6][1],float(Poisson),Iso_viscoelastic [6][0]),(Iso_viscoelastic [7][1],float(Poisson),Iso_viscoelastic [7][0]),(Iso_viscoelastic [8][1],float(Poisson),Iso_viscoelastic [8][0]),(Iso_viscoelastic [9][1],float(Poisson),Iso_viscoelastic [9][0])))
				if analysisMat==2:
					mdb.models[model_name].materials[Material_matname].Expansion(table=((float(Iso_CTE), 0),(Iso_thermoviscoelastic[0][1], Iso_viscoelastic [0][0]),(Iso_thermoviscoelastic[1][1], Iso_viscoelastic [1][0]),(Iso_thermoviscoelastic[2][1], Iso_viscoelastic [2][0]),(Iso_thermoviscoelastic[3][1], Iso_viscoelastic [3][0]),(Iso_thermoviscoelastic[4][1], Iso_viscoelastic [4][0]),(Iso_thermoviscoelastic[5][1], Iso_viscoelastic [5][0]),(Iso_thermoviscoelastic[6][1], Iso_viscoelastic [6][0]),(Iso_thermoviscoelastic[7][1], Iso_viscoelastic [7][0]),(Iso_thermoviscoelastic[8][1], Iso_viscoelastic [8][0]),(Iso_thermoviscoelastic[9][1], Iso_viscoelastic [9][0])), temperatureDependency=ON)					
         elif Anisotropy in [2,3]:
		      if Anisotropy ==2:
				EV=Eng_viscoelastic
				i=len(Eng_viscoelastic)
				EI=EngE_infinity[0]
				TypeM=ENGINEERING_CONSTANTS
				if analysisMat==2:
				   ET=Eng_thermoviscoelastic
		      elif Anisotropy==3:
				EV=Ort_viscoelastic
				i=len(Ort_viscoelastic)
				EI=OrtE_infinity[0]
				TypeM=ORTHOTROPIC
				if analysisMat==2:
				   ET=Eng_thermoviscoelastic			  
				   Eng_CTE=Ort_CTE	      			  
		      if i==1:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0])), temperatureDependency=ON)
		      if i==2:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0])))
				if analysisMat==2:				
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[1][1],ET[1][2],ET[1][3], EV[1][0])), temperatureDependency=ON)
		      if i==3:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0]),(EV[2][1],EV[2][2],EV[2][3],EV[2][4],EV[2][5],EV[2][6],EV[2][7],EV[2][8],EV[2][9],EV[2][0])))
				if analysisMat==2:				
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0])), temperatureDependency=ON)
		      if i==4:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0]),(EV[2][1],EV[2][2],EV[2][3],EV[2][4],EV[2][5],EV[2][6],EV[2][7],EV[2][8],EV[2][9],EV[2][0]),(EV[3][1],EV[3][2],EV[3][3],EV[3][4],EV[3][5],EV[3][6],EV[3][7],EV[3][8],EV[3][9],EV[3][0])))
				if analysisMat==2:				
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[3][1],ET[3][2],ET[3][3], EV[3][0])), temperatureDependency=ON)						
		      if i==5:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0]),(EV[2][1],EV[2][2],EV[2][3],EV[2][4],EV[2][5],EV[2][6],EV[2][7],EV[2][8],EV[2][9],EV[2][0]),(EV[3][1],EV[3][2],EV[3][3],EV[3][4],EV[3][5],EV[3][6],EV[3][7],EV[3][8],EV[3][9],EV[3][0]),(EV[4][1],EV[4][2],EV[4][3],EV[4][4],EV[4][5],EV[4][6],EV[4][7],EV[4][8],EV[4][9],EV[4][0])))
				if analysisMat==2:				
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[3][1],ET[3][2],ET[3][3], EV[3][0]),(ET[4][1],ET[4][2],ET[4][3], EV[4][0])), temperatureDependency=ON)
		      if i==6:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0]),(EV[2][1],EV[2][2],EV[2][3],EV[2][4],EV[2][5],EV[2][6],EV[2][7],EV[2][8],EV[2][9],EV[2][0]),(EV[3][1],EV[3][2],EV[3][3],EV[3][4],EV[3][5],EV[3][6],EV[3][7],EV[3][8],EV[3][9],EV[3][0]),(EV[4][1],EV[4][2],EV[4][3],EV[4][4],EV[4][5],EV[4][6],EV[4][7],EV[4][8],EV[4][9],EV[4][0]),(EV[5][1],EV[5][2],EV[5][3],EV[5][4],EV[5][5],EV[5][6],EV[5][7],EV[5][8],EV[5][9],EV[5][0])))
				if analysisMat==2:			
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[3][1],ET[3][2],ET[3][3], EV[3][0]),(ET[4][1],ET[4][2],ET[4][3], EV[4][0]),(ET[5][1],ET[5][2],ET[5][3], EV[5][0])), temperatureDependency=ON)
		      if i==7:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0]),(EV[2][1],EV[2][2],EV[2][3],EV[2][4],EV[2][5],EV[2][6],EV[2][7],EV[2][8],EV[2][9],EV[2][0]),(EV[3][1],EV[3][2],EV[3][3],EV[3][4],EV[3][5],EV[3][6],EV[3][7],EV[3][8],EV[3][9],EV[3][0]),(EV[4][1],EV[4][2],EV[4][3],EV[4][4],EV[4][5],EV[4][6],EV[4][7],EV[4][8],EV[4][9],EV[4][0]),(EV[5][1],EV[5][2],EV[5][3],EV[5][4],EV[5][5],EV[5][6],EV[5][7],EV[5][8],EV[5][9],EV[5][0]),(EV[6][1],EV[6][2],EV[6][3],EV[6][4],EV[6][5],EV[6][6],EV[6][7],EV[6][8],EV[6][9],EV[6][0])))
				if analysisMat==2:				
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[3][1],ET[3][2],ET[3][3], EV[3][0]),(ET[4][1],ET[4][2],ET[4][3], EV[4][0]),(ET[5][1],ET[5][2],ET[5][3], EV[5][0]),(ET[6][1],ET[6][2],ET[6][3], EV[6][0])), temperatureDependency=ON)
		      if i==8:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0]),(EV[2][1],EV[2][2],EV[2][3],EV[2][4],EV[2][5],EV[2][6],EV[2][7],EV[2][8],EV[2][9],EV[2][0]),(EV[3][1],EV[3][2],EV[3][3],EV[3][4],EV[3][5],EV[3][6],EV[3][7],EV[3][8],EV[3][9],EV[3][0]),(EV[4][1],EV[4][2],EV[4][3],EV[4][4],EV[4][5],EV[4][6],EV[4][7],EV[4][8],EV[4][9],EV[4][0]),(EV[5][1],EV[5][2],EV[5][3],EV[5][4],EV[5][5],EV[5][6],EV[5][7],EV[5][8],EV[5][9],EV[5][0]),(EV[6][1],EV[6][2],EV[6][3],EV[6][4],EV[6][5],EV[6][6],EV[6][7],EV[6][8],EV[6][9],EV[6][0]),(EV[7][1],EV[7][2],EV[7][3],EV[7][4],EV[7][5],EV[7][6],EV[7][7],EV[7][8],EV[7][9],EV[7][0])))
				if analysisMat==2:			
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[3][1],ET[3][2],ET[3][3], EV[3][0]),(ET[4][1],ET[4][2],ET[4][3], EV[4][0]),(ET[5][1],ET[5][2],ET[5][3], EV[5][0]),(ET[6][1],ET[6][2],ET[6][3], EV[6][0]),(ET[7][1],ET[7][2],ET[7][3], EV[7][0])), temperatureDependency=ON)					
		      if i==9:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0]),(EV[2][1],EV[2][2],EV[2][3],EV[2][4],EV[2][5],EV[2][6],EV[2][7],EV[2][8],EV[2][9],EV[2][0]),(EV[3][1],EV[3][2],EV[3][3],EV[3][4],EV[3][5],EV[3][6],EV[3][7],EV[3][8],EV[3][9],EV[3][0]),(EV[4][1],EV[4][2],EV[4][3],EV[4][4],EV[4][5],EV[4][6],EV[4][7],EV[4][8],EV[4][9],EV[4][0]),(EV[5][1],EV[5][2],EV[5][3],EV[5][4],EV[5][5],EV[5][6],EV[5][7],EV[5][8],EV[5][9],EV[5][0]),(EV[6][1],EV[6][2],EV[6][3],EV[6][4],EV[6][5],EV[6][6],EV[6][7],EV[6][8],EV[6][9],EV[6][0]),(EV[7][1],EV[7][2],EV[7][3],EV[7][4],EV[7][5],EV[7][6],EV[7][7],EV[7][8],EV[7][9],EV[7][0]),(EV[8][1],EV[8][2],EV[8][3],EV[8][4],EV[8][5],EV[8][6],EV[8][7],EV[8][8],EV[8][9],EV[8][0])))
				if analysisMat==2:				
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[3][1],ET[3][2],ET[3][3], EV[3][0]),(ET[4][1],ET[4][2],ET[4][3], EV[4][0]),(ET[5][1],ET[5][2],ET[5][3], EV[5][0]),(ET[6][1],ET[6][2],ET[6][3], EV[6][0]),(ET[7][1],ET[7][2],ET[7][3], EV[7][0]),(ET[8][1],ET[8][2],ET[8][3], EV[8][0])), temperatureDependency=ON)				
		      if i==10:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((EI[0],EI[1],EI[2],EI[3],EI[4],EI[5],EI[6],EI[7],EI[8],0),(EV[0][1],EV[0][2],EV[0][3],EV[0][4],EV[0][5],EV[0][6],EV[0][7],EV[0][8],EV[0][9],EV[0][0]),(EV[1][1],EV[1][2],EV[1][3],EV[1][4],EV[1][5],EV[1][6],EV[1][7],EV[1][8],EV[1][9],EV[1][0]),(EV[2][1],EV[2][2],EV[2][3],EV[2][4],EV[2][5],EV[2][6],EV[2][7],EV[2][8],EV[2][9],EV[2][0]),(EV[3][1],EV[3][2],EV[3][3],EV[3][4],EV[3][5],EV[3][6],EV[3][7],EV[3][8],EV[3][9],EV[3][0]),(EV[4][1],EV[4][2],EV[4][3],EV[4][4],EV[4][5],EV[4][6],EV[4][7],EV[4][8],EV[4][9],EV[4][0]),(EV[5][1],EV[5][2],EV[5][3],EV[5][4],EV[5][5],EV[5][6],EV[5][7],EV[5][8],EV[5][9],EV[5][0]),(EV[6][1],EV[6][2],EV[6][3],EV[6][4],EV[6][5],EV[6][6],EV[6][7],EV[6][8],EV[6][9],EV[6][0]),(EV[7][1],EV[7][2],EV[7][3],EV[7][4],EV[7][5],EV[7][6],EV[7][7],EV[7][8],EV[7][9],EV[7][0]),(EV[8][1],EV[8][2],EV[8][3],EV[8][4],EV[8][5],EV[8][6],EV[8][7],EV[8][8],EV[8][9],EV[8][0]),(EV[9][1],EV[9][2],EV[9][3],EV[9][4],EV[9][5],EV[9][6],EV[9][7],EV[9][8],EV[9][9],EV[9][0])))
				if analysisMat==2:				
					mdb.models[model_name].materials[Material_matname].Expansion(type=ORTHOTROPIC,table=((Eng_CTE[0][0],Eng_CTE[0][1],Eng_CTE[0][2],0),(ET[0][1],ET[0][2],ET[0][3], EV[0][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[2][1],ET[2][2],ET[2][3], EV[2][0]),(ET[3][1],ET[3][2],ET[3][3], EV[3][0]),(ET[4][1],ET[4][2],ET[4][3], EV[4][0]),(ET[5][1],ET[5][2],ET[5][3], EV[5][0]),(ET[6][1],ET[6][2],ET[6][3], EV[6][0]),(ET[7][1],ET[7][2],ET[7][3], EV[7][0]),(ET[8][1],ET[8][2],ET[8][3], EV[8][0]),(ET[9][1],ET[9][2],ET[9][3], EV[9][0])), temperatureDependency=ON)				
         elif Anisotropy == 4:
		     AV=Ani_viscoelastic
		     i=len(Ani_viscoelastic)
		     AI=AniE_infinity[0]
		     TypeM=ANISOTROPIC
		     if analysisMat==2:
				  AT=Ani_thermoviscoelastic			  
				  ACTE=Ani_CTE[0]			 
		     if i==1:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0])), temperatureDependency=ON)
		     if i==2:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[0][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0])), temperatureDependency=ON)
		     if i==3:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0]),(AV[2][1],AV[2][2],AV[2][3],AV[2][4],AV[2][5],AV[2][6],AV[2][7],AV[2][8],AV[2][9],AV[2][10],AV[2][11],AV[2][12],AV[2][13],AV[2][14],AV[2][15],AV[2][16],AV[2][17],AV[2][18],AV[2][19],AV[2][20],AV[2][21],AV[2][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[1][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0]),(AT[2][1],AT[2][2],AT[2][3],AT[2][4],AT[2][5],AT[2][6],AV[2][0])), temperatureDependency=ON)
		     if i==4:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0]),(AV[2][1],AV[2][2],AV[2][3],AV[2][4],AV[2][5],AV[2][6],AV[2][7],AV[2][8],AV[2][9],AV[2][10],AV[2][11],AV[2][12],AV[2][13],AV[2][14],AV[2][15],AV[2][16],AV[2][17],AV[2][18],AV[2][19],AV[2][20],AV[2][21],AV[2][0]),(AV[3][1],AV[3][2],AV[3][3],AV[3][4],AV[3][5],AV[3][6],AV[3][7],AV[3][8],AV[3][9],AV[3][10],AV[3][11],AV[3][12],AV[3][13],AV[3][14],AV[3][15],AV[3][16],AV[3][17],AV[3][18],AV[3][19],AV[3][20],AV[3][21],AV[3][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[1][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0]),(AT[2][1],AT[2][2],AT[2][3],AT[2][4],AT[2][5],AT[2][6],AV[2][0]),(AT[3][1],AT[3][2],AT[3][3],AT[3][4],AT[3][5],AT[3][6],AV[3][0])), temperatureDependency=ON)
		     if i==5:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0]),(AV[2][1],AV[2][2],AV[2][3],AV[2][4],AV[2][5],AV[2][6],AV[2][7],AV[2][8],AV[2][9],AV[2][10],AV[2][11],AV[2][12],AV[2][13],AV[2][14],AV[2][15],AV[2][16],AV[2][17],AV[2][18],AV[2][19],AV[2][20],AV[2][21],AV[2][0]),(AV[3][1],AV[3][2],AV[3][3],AV[3][4],AV[3][5],AV[3][6],AV[3][7],AV[3][8],AV[3][9],AV[3][10],AV[3][11],AV[3][12],AV[3][13],AV[3][14],AV[3][15],AV[3][16],AV[3][17],AV[3][18],AV[3][19],AV[3][20],AV[3][21],AV[3][0]),(AV[4][1],AV[4][2],AV[4][3],AV[4][4],AV[4][5],AV[4][6],AV[4][7],AV[4][8],AV[4][9],AV[4][10],AV[4][11],AV[4][12],AV[4][13],AV[4][14],AV[4][15],AV[4][16],AV[4][17],AV[4][18],AV[4][19],AV[4][20],AV[4][21],AV[4][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[1][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0]),(AT[2][1],AT[2][2],AT[2][3],AT[2][4],AT[2][5],AT[2][6],AV[2][0]),(AT[3][1],AT[3][2],AT[3][3],AT[3][4],AT[3][5],AT[3][6],AV[3][0]),(AT[4][1],AT[4][2],AT[4][3],AT[4][4],AT[4][5],AT[4][6],AV[4][0])), temperatureDependency=ON)
		     if i==6:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0]),(AV[2][1],AV[2][2],AV[2][3],AV[2][4],AV[2][5],AV[2][6],AV[2][7],AV[2][8],AV[2][9],AV[2][10],AV[2][11],AV[2][12],AV[2][13],AV[2][14],AV[2][15],AV[2][16],AV[2][17],AV[2][18],AV[2][19],AV[2][20],AV[2][21],AV[2][0]),(AV[3][1],AV[3][2],AV[3][3],AV[3][4],AV[3][5],AV[3][6],AV[3][7],AV[3][8],AV[3][9],AV[3][10],AV[3][11],AV[3][12],AV[3][13],AV[3][14],AV[3][15],AV[3][16],AV[3][17],AV[3][18],AV[3][19],AV[3][20],AV[3][21],AV[3][0]),(AV[4][1],AV[4][2],AV[4][3],AV[4][4],AV[4][5],AV[4][6],AV[4][7],AV[4][8],AV[4][9],AV[4][10],AV[4][11],AV[4][12],AV[4][13],AV[4][14],AV[4][15],AV[4][16],AV[4][17],AV[4][18],AV[4][19],AV[4][20],AV[4][21],AV[4][0]),(AV[5][1],AV[5][2],AV[5][3],AV[5][4],AV[5][5],AV[5][6],AV[5][7],AV[5][8],AV[5][9],AV[5][10],AV[5][11],AV[5][12],AV[5][13],AV[5][14],AV[5][15],AV[5][16],AV[5][17],AV[5][18],AV[5][19],AV[5][20],AV[5][21],AV[5][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[1][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0]),(AT[2][1],AT[2][2],AT[2][3],AT[2][4],AT[2][5],AT[2][6],AV[2][0]),(AT[3][1],AT[3][2],AT[3][3],AT[3][4],AT[3][5],AT[3][6],AV[3][0]),(AT[4][1],AT[4][2],AT[4][3],AT[4][4],AT[4][5],AT[4][6],AV[4][0]),(AT[5][1],AT[5][2],AT[5][3],AT[5][4],AT[5][5],AT[5][6],AV[5][0])), temperatureDependency=ON)
		     if i==7:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0]),(AV[2][1],AV[2][2],AV[2][3],AV[2][4],AV[2][5],AV[2][6],AV[2][7],AV[2][8],AV[2][9],AV[2][10],AV[2][11],AV[2][12],AV[2][13],AV[2][14],AV[2][15],AV[2][16],AV[2][17],AV[2][18],AV[2][19],AV[2][20],AV[2][21],AV[2][0]),(AV[3][1],AV[3][2],AV[3][3],AV[3][4],AV[3][5],AV[3][6],AV[3][7],AV[3][8],AV[3][9],AV[3][10],AV[3][11],AV[3][12],AV[3][13],AV[3][14],AV[3][15],AV[3][16],AV[3][17],AV[3][18],AV[3][19],AV[3][20],AV[3][21],AV[3][0]),(AV[4][1],AV[4][2],AV[4][3],AV[4][4],AV[4][5],AV[4][6],AV[4][7],AV[4][8],AV[4][9],AV[4][10],AV[4][11],AV[4][12],AV[4][13],AV[4][14],AV[4][15],AV[4][16],AV[4][17],AV[4][18],AV[4][19],AV[4][20],AV[4][21],AV[4][0]),(AV[5][1],AV[5][2],AV[5][3],AV[5][4],AV[5][5],AV[5][6],AV[5][7],AV[5][8],AV[5][9],AV[5][10],AV[5][11],AV[5][12],AV[5][13],AV[5][14],AV[5][15],AV[5][16],AV[5][17],AV[5][18],AV[5][19],AV[5][20],AV[5][21],AV[5][0]),(AV[6][1],AV[6][2],AV[6][3],AV[6][4],AV[6][5],AV[6][6],AV[6][7],AV[6][8],AV[6][9],AV[6][10],AV[6][11],AV[6][12],AV[6][13],AV[6][14],AV[6][15],AV[6][16],AV[6][17],AV[6][18],AV[6][19],AV[6][20],AV[6][21],AV[6][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[1][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0]),(AT[2][1],AT[2][2],AT[2][3],AT[2][4],AT[2][5],AT[2][6],AV[2][0]),(AT[3][1],AT[3][2],AT[3][3],AT[3][4],AT[3][5],AT[3][6],AV[3][0]),(AT[4][1],AT[4][2],AT[4][3],AT[4][4],AT[4][5],AT[4][6],AV[4][0]),(AT[5][1],AT[5][2],AT[5][3],AT[5][4],AT[5][5],AT[5][6],AV[5][0]),(AT[6][1],AT[6][2],AT[6][3],AT[6][4],AT[6][5],AT[6][6],AV[6][0])), temperatureDependency=ON)
		     if i==8:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0]),(AV[2][1],AV[2][2],AV[2][3],AV[2][4],AV[2][5],AV[2][6],AV[2][7],AV[2][8],AV[2][9],AV[2][10],AV[2][11],AV[2][12],AV[2][13],AV[2][14],AV[2][15],AV[2][16],AV[2][17],AV[2][18],AV[2][19],AV[2][20],AV[2][21],AV[2][0]),(AV[3][1],AV[3][2],AV[3][3],AV[3][4],AV[3][5],AV[3][6],AV[3][7],AV[3][8],AV[3][9],AV[3][10],AV[3][11],AV[3][12],AV[3][13],AV[3][14],AV[3][15],AV[3][16],AV[3][17],AV[3][18],AV[3][19],AV[3][20],AV[3][21],AV[3][0]),(AV[4][1],AV[4][2],AV[4][3],AV[4][4],AV[4][5],AV[4][6],AV[4][7],AV[4][8],AV[4][9],AV[4][10],AV[4][11],AV[4][12],AV[4][13],AV[4][14],AV[4][15],AV[4][16],AV[4][17],AV[4][18],AV[4][19],AV[4][20],AV[4][21],AV[4][0]),(AV[5][1],AV[5][2],AV[5][3],AV[5][4],AV[5][5],AV[5][6],AV[5][7],AV[5][8],AV[5][9],AV[5][10],AV[5][11],AV[5][12],AV[5][13],AV[5][14],AV[5][15],AV[5][16],AV[5][17],AV[5][18],AV[5][19],AV[5][20],AV[5][21],AV[5][0]),(AV[6][1],AV[6][2],AV[6][3],AV[6][4],AV[6][5],AV[6][6],AV[6][7],AV[6][8],AV[6][9],AV[6][10],AV[6][11],AV[6][12],AV[6][13],AV[6][14],AV[6][15],AV[6][16],AV[6][17],AV[6][18],AV[6][19],AV[6][20],AV[6][21],AV[6][0]),(AV[7][1],AV[7][2],AV[7][3],AV[7][4],AV[7][5],AV[7][6],AV[7][7],AV[7][8],AV[7][9],AV[7][10],AV[7][11],AV[7][12],AV[7][13],AV[7][14],AV[7][15],AV[7][16],AV[7][17],AV[7][18],AV[7][19],AV[7][20],AV[7][21],AV[7][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[1][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0]),(AT[2][1],AT[2][2],AT[2][3],AT[2][4],AT[2][5],AT[2][6],AV[2][0]),(AT[3][1],AT[3][2],AT[3][3],AT[3][4],AT[3][5],AT[3][6],AV[3][0]),(AT[4][1],AT[4][2],AT[4][3],AT[4][4],AT[4][5],AT[4][6],AV[4][0]),(AT[5][1],AT[5][2],AT[5][3],AT[5][4],AT[5][5],AT[5][6],AV[5][0]),(AT[6][1],AT[6][2],AT[6][3],AT[6][4],AT[6][5],AT[6][6],AV[6][0]),(AT[7][1],AT[7][2],AT[7][3],AT[7][4],AT[7][5],AT[7][6],AV[7][0])), temperatureDependency=ON)
		     if i==9:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0]),(AV[2][1],AV[2][2],AV[2][3],AV[2][4],AV[2][5],AV[2][6],AV[2][7],AV[2][8],AV[2][9],AV[2][10],AV[2][11],AV[2][12],AV[2][13],AV[2][14],AV[2][15],AV[2][16],AV[2][17],AV[2][18],AV[2][19],AV[2][20],AV[2][21],AV[2][0]),(AV[3][1],AV[3][2],AV[3][3],AV[3][4],AV[3][5],AV[3][6],AV[3][7],AV[3][8],AV[3][9],AV[3][10],AV[3][11],AV[3][12],AV[3][13],AV[3][14],AV[3][15],AV[3][16],AV[3][17],AV[3][18],AV[3][19],AV[3][20],AV[3][21],AV[3][0]),(AV[4][1],AV[4][2],AV[4][3],AV[4][4],AV[4][5],AV[4][6],AV[4][7],AV[4][8],AV[4][9],AV[4][10],AV[4][11],AV[4][12],AV[4][13],AV[4][14],AV[4][15],AV[4][16],AV[4][17],AV[4][18],AV[4][19],AV[4][20],AV[4][21],AV[4][0]),(AV[5][1],AV[5][2],AV[5][3],AV[5][4],AV[5][5],AV[5][6],AV[5][7],AV[5][8],AV[5][9],AV[5][10],AV[5][11],AV[5][12],AV[5][13],AV[5][14],AV[5][15],AV[5][16],AV[5][17],AV[5][18],AV[5][19],AV[5][20],AV[5][21],AV[5][0]),(AV[6][1],AV[6][2],AV[6][3],AV[6][4],AV[6][5],AV[6][6],AV[6][7],AV[6][8],AV[6][9],AV[6][10],AV[6][11],AV[6][12],AV[6][13],AV[6][14],AV[6][15],AV[6][16],AV[6][17],AV[6][18],AV[6][19],AV[6][20],AV[6][21],AV[6][0]),(AV[7][1],AV[7][2],AV[7][3],AV[7][4],AV[7][5],AV[7][6],AV[7][7],AV[7][8],AV[7][9],AV[7][10],AV[7][11],AV[7][12],AV[7][13],AV[7][14],AV[7][15],AV[7][16],AV[7][17],AV[7][18],AV[7][19],AV[7][20],AV[7][21],AV[7][0]),(AV[8][1],AV[8][2],AV[8][3],AV[7][4],AV[8][5],AV[8][6],AV[8][7],AV[8][8],AV[8][9],AV[8][10],AV[8][11],AV[8][12],AV[8][13],AV[8][14],AV[8][15],AV[8][16],AV[8][17],AV[8][18],AV[8][19],AV[8][20],AV[8][21],AV[8][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[1][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0]),(AT[2][1],AT[2][2],AT[2][3],AT[2][4],AT[2][5],AT[2][6],AV[2][0]),(AT[3][1],AT[3][2],AT[3][3],AT[3][4],AT[3][5],AT[3][6],AV[3][0]),(AT[4][1],AT[4][2],AT[4][3],AT[4][4],AT[4][5],AT[4][6],AV[4][0]),(AT[5][1],AT[5][2],AT[5][3],AT[5][4],AT[5][5],AT[5][6],AV[5][0]),(AT[6][1],AT[6][2],AT[6][3],AT[6][4],AT[6][5],AT[6][6],AV[6][0]),(AT[7][1],AT[7][2],AT[7][3],AT[7][4],AT[7][5],AT[7][6],AV[7][0]),(AT[8][1],AT[8][2],AT[8][3],AT[8][4],AT[8][5],AT[8][6],AV[8][0])), temperatureDependency=ON)
		     if i==10:
				mdb.models[model_name].materials[Material_matname].Elastic(type=TypeM, temperatureDependency=ON,table=((AI[0],AI[1],AI[2],AI[3],AI[4],AI[5],AI[6],AI[7],AI[8],AI[9],AI[10],AI[11],AI[12],AI[13],AI[14],AI[15],AI[16],AI[17],AI[18],AI[19],AI[20],0),(AV[0][1],AV[0][2],AV[0][3],AV[0][4],AV[0][5],AV[0][6],AV[0][7],AV[0][8],AV[0][9],AV[0][10],AV[0][11],AV[0][12],AV[0][13],AV[0][14],AV[0][15],AV[0][16],AV[0][17],AV[0][18],AV[0][19],AV[0][20],AV[0][21],AV[0][0]),(AV[1][1],AV[1][2],AV[1][3],AV[1][4],AV[1][5],AV[1][6],AV[1][7],AV[1][8],AV[1][9],AV[1][10],AV[1][11],AV[1][12],AV[1][13],AV[1][14],AV[1][15],AV[1][16],AV[1][17],AV[1][18],AV[1][19],AV[1][20],AV[1][21],AV[1][0]),(AV[2][1],AV[2][2],AV[2][3],AV[2][4],AV[2][5],AV[2][6],AV[2][7],AV[2][8],AV[2][9],AV[2][10],AV[2][11],AV[2][12],AV[2][13],AV[2][14],AV[2][15],AV[2][16],AV[2][17],AV[2][18],AV[2][19],AV[2][20],AV[2][21],AV[2][0]),(AV[3][1],AV[3][2],AV[3][3],AV[3][4],AV[3][5],AV[3][6],AV[3][7],AV[3][8],AV[3][9],AV[3][10],AV[3][11],AV[3][12],AV[3][13],AV[3][14],AV[3][15],AV[3][16],AV[3][17],AV[3][18],AV[3][19],AV[3][20],AV[3][21],AV[3][0]),(AV[4][1],AV[4][2],AV[4][3],AV[4][4],AV[4][5],AV[4][6],AV[4][7],AV[4][8],AV[4][9],AV[4][10],AV[4][11],AV[4][12],AV[4][13],AV[4][14],AV[4][15],AV[4][16],AV[4][17],AV[4][18],AV[4][19],AV[4][20],AV[4][21],AV[4][0]),(AV[5][1],AV[5][2],AV[5][3],AV[5][4],AV[5][5],AV[5][6],AV[5][7],AV[5][8],AV[5][9],AV[5][10],AV[5][11],AV[5][12],AV[5][13],AV[5][14],AV[5][15],AV[5][16],AV[5][17],AV[5][18],AV[5][19],AV[5][20],AV[5][21],AV[5][0]),(AV[6][1],AV[6][2],AV[6][3],AV[6][4],AV[6][5],AV[6][6],AV[6][7],AV[6][8],AV[6][9],AV[6][10],AV[6][11],AV[6][12],AV[6][13],AV[6][14],AV[6][15],AV[6][16],AV[6][17],AV[6][18],AV[6][19],AV[6][20],AV[6][21],AV[6][0]),(AV[7][1],AV[7][2],AV[7][3],AV[7][4],AV[7][5],AV[7][6],AV[7][7],AV[7][8],AV[7][9],AV[7][10],AV[7][11],AV[7][12],AV[7][13],AV[7][14],AV[7][15],AV[7][16],AV[7][17],AV[7][18],AV[7][19],AV[7][20],AV[7][21],AV[7][0]),(AV[8][1],AV[8][2],AV[8][3],AV[7][4],AV[8][5],AV[8][6],AV[8][7],AV[8][8],AV[8][9],AV[8][10],AV[8][11],AV[8][12],AV[8][13],AV[8][14],AV[8][15],AV[8][16],AV[8][17],AV[8][18],AV[8][19],AV[8][20],AV[8][21],AV[8][0]),(AV[9][1],AV[9][2],AV[9][3],AV[9][4],AV[9][5],AV[9][6],AV[9][7],AV[9][8],AV[9][9],AV[9][10],AV[9][11],AV[9][12],AV[9][13],AV[9][14],AV[9][15],AV[9][16],AV[9][17],AV[9][18],AV[9][19],AV[9][20],AV[9][21],AV[9][0])))
				if analysisMat==2:									
					mdb.models[model_name].materials[Material_matname].Expansion(type=TypeM,table=((ACTE[0],ACTE[1],ACTE[2],ACTE[3],ACTE[4],ACTE[5],0),(AT[0][1],AT[0][2],AT[0][3],AT[0][4],AT[0][5],AT[0][6],AV[0][0]),(AT[1][1],AT[1][2],AT[1][3],AT[1][4],AT[1][5],AT[1][6],AV[1][0]),(AT[2][1],AT[2][2],AT[2][3],AT[2][4],AT[2][5],AT[2][6],AV[2][0]),(AT[3][1],AT[3][2],AT[3][3],AT[3][4],AT[3][5],AT[3][6],AV[3][0]),(AT[4][1],AT[4][2],AT[4][3],AT[4][4],AT[4][5],AT[4][6],AV[4][0]),(AT[5][1],AT[5][2],AT[5][3],AT[5][4],AT[5][5],AT[5][6],AV[5][0]),(AT[6][1],AT[6][2],AT[6][3],AT[6][4],AT[6][5],AT[6][6],AV[6][0]),(AT[7][1],AT[7][2],AT[7][3],AT[7][4],AT[7][5],AT[7][6],AV[7][0]),(AT[8][1],AT[8][2],AT[8][3],AT[8][4],AT[8][5],AT[8][6],AV[8][0]),(AT[9][1],AT[9][2],AT[9][3],AT[9][4],AT[9][5],AT[9][6],AV[9][0])), temperatureDependency=ON)																																			
    elif methodIn in [2]:
         ep1=' T'
         mdb.models[model_name].Material(name=Material_matname, materialIdentifier=ep1)
         f=open(file_material_input,"r")
         lines=f.readlines()
         lines=[w.replace('\t', ' ') for w in lines]
         lines=[w.replace('\n', '') for w in lines]	 		 
         Table0=[]
         x1=0
         for x in lines: 
			Table0.append(x.split(' '))
			x1=x1+1
         f.close()
         for xC in range (0,x1):
			Table0[xC] = [float(w) for w in Table0[xC]]	
         if Anisotropy == 1:
		     mdb.models[model_name].materials[Material_matname].Elastic(type=ISOTROPIC, temperatureDependency=ON,table=Table0)
         elif Anisotropy == 2:
		     mdb.models[model_name].materials[Material_matname].Elastic(type=ENGINEERING_CONSTANTS,temperatureDependency=ON,table=Table0)
         elif Anisotropy == 3:
		     mdb.models[model_name].materials[Material_matname].Elastic(type=ORTHOTROPIC,temperatureDependency=ON,table=Table0)
         elif Anisotropy == 4:
		     mdb.models[model_name].materials[Material_matname].Elastic(type=ANISOTROPIC,temperatureDependency=ON,table=Table0)			 

    return 1
